<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAUFBQAFRUVABYWFQAWFhYAFxcWABcXFwAXGBYAFxgXABgYGAAYGRcAGRkZABkaGAAaGhoAGxsbABwc
        HAAcHRsAHR0dAB4eHgAeHx0AHx8fAB8gHgAiIB8AICEfACEiIAAiIiEAIiMhACUjIgAjIyMAIyQiACYk
        IwAkJSMAJSUjACUlJAAlJSUAKCUkACUmJAAoJiUAJiYmACYnJQApJyYAJygmACgpJwAsKSkAKSooACor
        KQArKyoALCssACssKgAsLSsALy0rAC0uLAAuLy0AMDEvADExMQAxMi8AMTIwADIyMgAzMjIANjQzADQ0
        NAA3NDMANDUzADU1NAA3NTQAODU0ADU2NAA4NjUANjY2ADc2NgA2NzUAOTc2ADc4NgA4ODcAOjg3ADg5
        NwA7OTgAPDk4ADw5OQA5OjgAPDo5AD06OQA6OzkAPTs5AD07OgA7PDoAPDw7AD48OwA8PDwAPzw7AD89
        PAA9PjwAQD49AD4/PQBBPz4AP0A+AD9APwBCQD8AQ0A/AEBBPwBBQkAAQkNBAENEQgBGREMAREVDAEdF
        RABFRkQARkZEAEZHRQBJR0YAR0hGAEpIRwBISUcAS0lIAElKSABMSkkASktJAE1LSgBLTEoATE1LAE9N
        TABRT04AT1BOAFJQTwBQUU8AUlFRAFFSUABSUlIAUlNRAFNUUgBWVFMAVFVTAFZWVABWVlYAVldVAFlX
        VgBXV1cAV1hWAFpYVwBbWFcAWFlXAFtZWABZWlgAXVtaAFtcWgBcXFwAX1xcAF1eXABhXl0AXl9dAGFf
        XgBfX18AX2BeAGBhXwBkYmEAZWNiAGNkYgBkZWMAaGZlAGlnZgBnaGYAaGlnAGxtawBubmwAbm9tAG9w
        bgBwcHAAcHFvAHFycAB0cnEAcnNxAHNzcwB2dHMAdXV0AHV2dAB1dnUAdnZ1AHh2dQB2dnYAdnd2AHd3
        dgB5d3YAd3h3AHh4dwB4eHgAeHl3AHh5eAB5engAenp6AHp7eQB7e3oAfXt6AH99fAB9fX0Afn5+AIF/
        fgB/gH4AgICAAIOBgACEgoEAgoOBAIODgwCEhIQAiIaFAIeIhgCKiIcAiYmJAImKiACKiooAj4+OAJGR
        kQCVlZUAlpaWAJmamACbm5sAnZ6dAKCgoACgoZ8AoaGgAKGhoQCioqIAo6KjAKWlpQCmpqYAra6tAK6u
        rQCvsK4AtbW1ALi4uADBwcEAysrKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm4OHWvba2trayrra4srW2tra2tra8uqyvubWzuLbQ3+E2Ly8eHBweKBce
        IyMZHhwcHBwcHhccHB4cHCgcIx4yMxQrJiYjIx4eLzMcKBYjIyMjIyMjGSwoMCkUIygWHh4eJiMcIx4e
        bXGLgm9iLBkjJh4cHClnaYKFdW8XGSYjIx4eHiMZN6aYcZxxiJ+UNBweHhdBn5iCb5t2n6MyGRweIyMj
        HijHSqFHaVxllHOgLygmQZtkpzNjZ4J2WsMXJiMeIyMUrWVlN1pHR0dKVKJtLRZpn2RRTlRKPUpUeakU
        Ix4oI06LjXtIU0lNT1N4aKgdKqtsipFyRktMQIl/j0UeHiMUdo1vQVVwnk9TQltbyhUkxltLS3qdZk9T
        OmeLeRkeIxl9l3lRWkaGvktJXW7MGiTFdFlPS3e0ZkJdgJJ/GSMmKGuNVF4+UElLq2xZP8IaJL9GT1NL
        T1NWRllejWccHh4jI6SLi0dTP09JgZWZlScdlZp6W0lJSVZPjoCmFx4jKBwZY8cyg2FdUluMWas8IhpA
        sFOTRlhgbnQxy1EXIx4jHiMeXNR/LpZXOYTIXx4fIBdqzn5EV5A1fNVUGSYeIyMjHiMcHsDPt6rJwSEX
        IyMjHBIexM+lsc2xGxcjHB4jIyMjJiMPGBE7NREQGyAjIyMmJh4NDEM4EwolIxkoHiMGBgYGCwYEAAwO
        BQUDBwYGBgYGCQIBCBAFAQELBgkJBtjY2NjY2Njcu9HX2trZ2NjY2NjY2tuWh9Pd29jY2NjY5ubm5ubm
        5ubS3ubm5ubm5ubm5ubm5uPi5ubm5ubm5ubm5ubm5ubm5uXk5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm
        5ubm5ubm5ubm5v///////////////////////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8//P//P///////////
        ////////////////////////
</value>
  </data>
</root>